{"version":3,"sources":["axios.js","Row.jsx","requests.js","Banner.jsx","Nav.jsx","App.jsx","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","id","movieTrailer","tmdbId","then","url","urlParams","URLSearchParams","URL","search","catch","error","alert","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88a42898.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row ({ title, fetchURL, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData () {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL])\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    console.log(movie.id)\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer(null, { tmdbId: movie.id } || \"\")\n      .then((url) => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'))\n      })\n      .catch((error) => alert('No Trailer for that Movie'))\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row_posters\">\n        {/* several row_posters */}\n        {movies.map(movie => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n            alt={movie.name}\n            />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\n    </div>\n  );\n}\n\nexport default Row\n\n","const API_KEY = \"16e2de57a2abdae029bfc75ab0008a53\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      )\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\": str;\n  }\n\n  return (\n    <header className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n          \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n        )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n\n        <h1 className=\"banner_description\">{movie?.overview}\n        {truncate(movie?.overview, 50)}\n        </h1>\n      </div>\n\n      <div className=\"banner_fadeBottom\" />\n    </header>\n  )\n}\n\nexport default Banner;","import React, { useState, useEffect } from 'react';\nimport './Nav.css';\n\nfunction Nav () {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    }\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n        alt=\"Netflix Logo\"\n      />\n    </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchURL={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}